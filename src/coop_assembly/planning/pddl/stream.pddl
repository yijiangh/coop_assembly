(define (stream construction)
  ;(:stream test-cfree
  ;  :inputs (?t ?e)
  ;  :domain (and (Traj ?r ?t) (Element ?e))
  ;  :certified (CFree ?t ?e)
  ;)

  (:stream sample-move
    ; :inputs (?r ?q1 ?q2)
    ;:domain (and (Conf ?r ?q1) (Conf ?r ?q2))
    ;:domain (and (BackoffConf ?r ?q1) (Conf ?r ?q2))
    :inputs (?r ?q1 ?q2 ?e1 ?e2)
    :domain (and (End ?r ?e1 ?q1) (Start ?r ?e2 ?q2)
                 (Transit ?e1 ?e2)
                 (Move)
            )
    :outputs (?t)
    :certified (and (MoveAction ?r ?q1 ?q2 ?t)
                    ;(MoveAction ?r ?q2 ?q1 ?t)
                    (Traj ?r ?t)
               )
  )

  (:stream sample-print
    :inputs (?r ?e)
    :domain (and (Robot ?r)
            )
    ; :fluents (Printed)
    :outputs (?q1 ?q2 ?t)
    :certified (and (PrintAction ?r ?e ?q1 ?q2 ?t)
                    (Start ?r ?e ?q1) (End ?r ?e ?q2)
                    (Conf ?r ?q1) (Conf ?r ?q2) (Traj ?r ?t))
  )
)
